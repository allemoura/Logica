MODULE fidelizacao
VAR
  state: {nulo, bronze, prata, ouro};
ASSIGN
  init(state) := nulo;
  next(state) :=
                case
                      state = nulo : {nulo, bronze};
                      state = bronze:{nulo, bronze, prata};
                      state = prata: {bronze, prata, ouro};
                      state = ouro: {ouro, prata};
                      TRUE: state;
                esac;
MODULE boleto
VAR
  state : {aberto, atrasado, pago};
ASSIGN
  init(state) := aberto;
  next(state) :=
                case
                      state = aberto: {aberto, atrasado};
                      state = atrasado :{atrasado, pago};
                      state = pago: pago;
                      TRUE: state;
                esac;

MODULE cliente
VAR
  boletos : boleto;
  state: {bomPagador, malPagador};
  fidelizacao : fidelizacao;
  
ASSIGN
  init(state) := bomPagador;
  next(state) :=
                case
                      state = bomPagador: {bomPagador, malPagador};
                      state = malPagador: {malPagador, bomPagador};
                      TRUE: state;
                  esac;

MODULE main
  VAR
    c:cliente;
    fatura: 0..100; -- porcentagem de faturas pagas dentro do prazo
    ultimoDiaDoMes: boolean;

ASSIGN
  init(c) := state{bomPagador};
  next(c) :=
            case
                  c = state{bomPagador} & fatura >= 75: bomPagador;
                  c = state{bomPagador} & fatura < 75: malPagador;
                  c = state{malPagador} & fatura < 75: malPagador;
                  TRUE: c;
              esac;

  init(c) := boleto{atrasado};
  next(c) := 
                          case
                                c = boleto{aberto} & ultimoDiaDoMes = true : atrasado; 
                                c = boleto{aberto} & ultimoDiaDoMes = falso : pago;
                                TRUE: c;

  --init(c) := fidelizacao(nulo);
  --next(c) := 

