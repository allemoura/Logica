MODULE main
VAR
    fidelizacao: {bronze, prata, ouro, nulo};
    boletos: {emAberto, pagos, atrasoSimples, atrasoMedio, atrasoGrave};
    acao: {pagar, naoPagar};

ASSIGN
    init(boletos) := emAberto;
    init(fidelizacao) := nulo;

    next(boletos) :=
        case
            boletos = emAberto & acao = pagar: pagos;
            boletos = emAberto & acao = naoPagar: emAberto;
            boletos = atrasoSimples & acao = naoPagar: atrasoMedio;
            boletos = atrasoMedio & acao = naoPagar: atrasoGrave;
            boletos = atrasoSimples & acao = pagar: pagos;
            boletos = atrasoMedio & acao = pagar: pagos;
            boletos = atrasoGrave & acao = pagar: pagos;
	    boletos = pagos: emAberto;
            TRUE: boletos;
        esac;

    next(fidelizacao) :=
        case
            fidelizacao = nulo & boletos = pagos: bronze;
            fidelizacao = bronze & boletos = pagos: prata;
            fidelizacao = prata & boletos = pagos: ouro;
            fidelizacao = ouro & boletos = atrasoSimples: prata;
            fidelizacao = prata & boletos = atrasoMedio: bronze;
            fidelizacao = bronze & boletos = atrasoGrave: nulo;
	          fidelizacao = bronze & boletos = atrasoSimples: nulo;
            fidelizacao = prata & boletos = atrasoSimples: bronze;
            fidelizacao = nulo & boletos = atrasoSimples: nulo;
            TRUE: fidelizacao;
        esac;

LTLSPEC X !(fidelizacao = ouro & boletos = atrasoMedio);
LTLSPEC X !(fidelizacao = ouro & boletos = atrasoGrave);
LTLSPEC X !(fidelizacao = ouro & boletos = atrasoSimples);
LTLSPEC X !(acao = pagar & boletos = atrasoSimples);
LTLSPEC !(fidelizacao = ouro U (boletos = atrasoSimples));
LTLSPEC !(fidelizacao = prata U (boletos = atrasoSimples));
LTLSPEC !(fidelizacao = prata U (boletos = pagos));
LTLSPEC !(fidelizacao = bronze U (boletos = atrasoSimples));
LTLSPEC !(fidelizacao = bronze U (boletos = pagos));
SPEC EG(fidelizacao = ouro -> AF(fidelizacao = prata & boletos = pagos))
SPEC EG(acao = pagar -> AF(boletos = pagos))
